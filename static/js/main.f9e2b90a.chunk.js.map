{"version":3,"sources":["logic/StateMachine.js","components/Snippet.js","components/SnippetTransition.js","components/ReactivePortrait.js","App.js","serviceWorker.js","index.js"],"names":["States","idle","minDurationS","transitions","tick50Ms","wave","probability","lookingAround","lookingAround2","attention","thumbsUp","knockKnock","thinking","bye","lookLeft","lookingLeft","lookRight","lookingRight","lookDown","lookingDown","lookUp","lookingUp","mouseUp","mouseUpLeft","lookingUpLeft","mouseUpRight","lookingUpRight","mouseLeft","mouseRight","mouseDown","DIRECTION_PROB","mouseDownLeft","lookingDownLeft","mouseDownRight","lookingDownRight","StateMachine","initialState","this","_state","_stateStartTime","Date","getTime","transition","_updateState","stateInfo","newStates","randomFloat","Math","random","Object","entries","entry","IDLE_START_POINTS_S","Snippet","props","onVideoLoaded","e","videoRef","current","currentTime","getVideoStartTime","React","createRef","readyState","isVideoReady","startTime","name","floor","length","style","position","top","left","width","height","borderRadius","WebkitMaskImage","ref","autoPlay","muted","loop","playsInline","onLoadedData","opacity","src","mediaPath","Component","SnippetTransition","updateTransition","state","transitionFraction","nextSnippetRef","transitionStartTime","playFromBeginning","timeElapsed","min","setState","nextProps","nextState","newName","_timer","window","setInterval","clearInterval","key","ReactivePortrait","invokeEvent","onMouseMove","event","rootRef","angle","side","direction","rect","getBoundingClientRect","centerX","x","round","centerY","y","offsetX","clientX","offsetY","clientY","sqrt","pow","atan","PI","onAttention","stateMachine","defaultSnippet","snippetName","getState","newSnippetName","addEventListener","getNewState","onSnippetChanged","onMouseEnter","onClick","snippetsMediaPath","App","onPortraitChanged","className","paddingTop","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9e2b90a.chunk.js","sourcesContent":["const DIRECTION_PROB = 0.01;\n\n// TODO\n// * States to introduce:\n// looking around, smile, silly, all directions, multiple idle states\nconst States = {\n  idle: {\n    minDurationS: 0.0,\n    transitions: {\n      tick50Ms: {\n        wave: { probability: 0.001 },\n        lookingAround: { probability: 0.001 },\n        lookingAround2: { probability: 0.001 },\n      },\n\n      attention: {\n        wave: { probability: 0.2 },\n        thumbsUp: { probability: 0.3 },\n        knockKnock: { probability: 0.3 },\n        thinking: { probability: 0.2 },\n      },\n\n      thumbsUp: { thumbsUp: {} },\n\n      bye: { bye: {} },\n\n      lookLeft: { lookingLeft: {} },\n      lookRight: { lookingRight: {} },\n      lookDown: { lookingDown: {} },\n      lookUp: { lookingUp: {} },\n\n      mouseUp: { lookingUp: { probability: DIRECTION_PROB } },\n      mouseUpLeft: { lookingUpLeft: { probability: DIRECTION_PROB } },\n      mouseUpRight: {\n        lookingUpRight: { probability: DIRECTION_PROB },\n      },\n      mouseLeft: { lookingLeft: { probability: DIRECTION_PROB } },\n      mouseRight: { lookingRight: { probability: DIRECTION_PROB } },\n      mouseDown: { lookingDown: { probability: DIRECTION_PROB * 0.5 } },\n      mouseDownLeft: { lookingDownLeft: { probability: DIRECTION_PROB } },\n      mouseDownRight: { lookingDownRight: { probability: DIRECTION_PROB } },\n    },\n  },\n\n  bye: {\n    minDurationS: 3.5,\n    transitions: { tick50Ms: { wave: {} } },\n  },\n\n  wave: {\n    minDurationS: 3,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  thumbsUp: {\n    minDurationS: 4.6,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  knockKnock: {\n    minDurationS: 6.9,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  thinking: {\n    minDurationS: 6.9,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingAround: {\n    minDurationS: 7,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingAround2: {\n    minDurationS: 6.3,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingUp: {\n    minDurationS: 5.6,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingUpLeft: {\n    minDurationS: 5.5,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingUpRight: {\n    minDurationS: 7,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingLeft: {\n    minDurationS: 6,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingRight: {\n    minDurationS: 5.5,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingDown: {\n    minDurationS: 5.3,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingDownLeft: {\n    minDurationS: 7.3,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n  lookingDownRight: {\n    minDurationS: 7.3,\n    transitions: { tick50Ms: { idle: {} } },\n  },\n};\n\nexport default class StateMachine {\n  constructor(initialState) {\n    this._state = initialState;\n    this._stateStartTime = new Date().getTime();\n  }\n\n  getState() {\n    return this._state;\n  }\n\n  getNewState(transition) {\n    this._updateState(transition);\n    return this._state;\n  }\n\n  _updateState(transition) {\n    var stateInfo = States[this._state];\n\n    var timeInStateMs = new Date().getTime() - this._stateStartTime;\n    if (timeInStateMs < stateInfo.minDurationS * 1000) {\n      return;\n    }\n\n    var newStates = stateInfo.transitions[transition];\n    if (!newStates) {\n      return;\n    }\n\n    const randomFloat = Math.random();\n    var probability = 0.0;\n    for (const entry of Object.entries(newStates)) {\n      probability += entry[1].probability || 1.0;\n      if (probability < randomFloat) {\n        continue;\n      }\n\n      // found new state, reset timer\n      this._stateStartTime = new Date().getTime();\n      this._state = entry[0];\n      return;\n    }\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst IDLE_START_POINTS_S = [10, 23.26];\n\n// Encapsulates a Video Snippet\nexport default class Snippet extends React.Component {\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    name: PropTypes.string,\n    opacity: PropTypes.number,\n    onVideoLoaded: PropTypes.func,\n    mediaPath: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.videoRef = React.createRef();\n  }\n\n  isVideoReady() {\n    return this.videoRef.current && this.videoRef.current.readyState === 4;\n  }\n\n  playFromBeginning() {\n    if (!this.isVideoReady()) {\n      return;\n    }\n    var startTime = 0;\n    if (this.props.name === \"idle\") {\n      startTime =\n        IDLE_START_POINTS_S[\n          Math.floor(Math.random() * IDLE_START_POINTS_S.length)\n        ];\n    }\n\n    this.videoRef.current.currentTime = startTime;\n  }\n\n  onVideoLoaded = (e) => {\n    this.videoRef.current.currentTime = this.getVideoStartTime();\n    if (this.props.onVideoLoaded) {\n      this.props.onVideoLoaded(e);\n    }\n  };\n\n  getVideoStartTime() {\n    if (this.props.name === \"idle\") {\n      return IDLE_START_POINTS_S[\n        Math.floor(Math.random() * IDLE_START_POINTS_S.length)\n      ];\n    }\n    return 0;\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: this.props.width,\n          height: this.props.height,\n          borderRadius: this.props.width / 2,\n          WebkitMaskImage:\n            \"-webkit-radial-gradient(circle, white 100%, black 100%)\",\n        }}\n      >\n        <video\n          ref={this.videoRef}\n          autoPlay\n          muted\n          loop\n          playsInline\n          onLoadedData={this.onVideoLoaded}\n          width={this.props.width}\n          height={this.props.height}\n          style={{\n            opacity: this.props.opacity,\n          }}\n        >\n          <source src={this.props.mediaPath + \"/\" + this.props.name + \".mov\"} />\n        </video>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Snippet from \"./Snippet\";\n\nconst VIDEO_CROSS_FADE_TIME_MS = 400;\nconst FRAME_INTERVAL_MS = 30;\n\n// Manages cross-fade between two Snippet Videos\nexport default class SnippetTransition extends React.Component {\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    name: PropTypes.string,\n    newName: PropTypes.string,\n    mediaPath: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.transitionStartTime = null;\n    this.state = {\n      transitionFraction: 1.0,\n    };\n\n    this.nextSnippetRef = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.newName === this.props.newName) {\n      return true;\n    }\n\n    nextState.transitionFraction = 0.0;\n    this.transitionStartTime = null;\n\n    return true;\n  }\n\n  componentDidMount() {\n    this._timer = window.setInterval(this.updateTransition, FRAME_INTERVAL_MS);\n  }\n\n  updateTransition = () => {\n    if (this.state.transitionFraction >= 1.0) {\n      return;\n    }\n\n    // wait for video to be ready before transitioning\n    if (\n      !this.nextSnippetRef.current ||\n      !this.nextSnippetRef.current.isVideoReady()\n    ) {\n      return;\n    }\n\n    // reset transition, and play from beginning\n    if (!this.transitionStartTime) {\n      this.transitionStartTime = new Date().getTime();\n      this.nextSnippetRef.current.playFromBeginning();\n    }\n\n    var timeElapsed = new Date().getTime() - this.transitionStartTime;\n    var transitionFraction = Math.min(\n      timeElapsed / VIDEO_CROSS_FADE_TIME_MS,\n      1.0\n    );\n\n    this.setState({\n      transitionFraction: transitionFraction,\n    });\n  };\n\n  componentWillUnmount() {\n    window.clearInterval(this._timer);\n  }\n\n  render() {\n    return (\n      <div>\n        <Snippet\n          key={this.props.name}\n          mediaPath={this.props.mediaPath}\n          width={this.props.width}\n          height={this.props.height}\n          name={this.props.name}\n          opacity={1.0}\n        />\n        {this.props.newName && this.props.newName !== this.props.name ? (\n          <Snippet\n            ref={this.nextSnippetRef}\n            key={this.props.newName}\n            mediaPath={this.props.mediaPath}\n            opacity={this.state.transitionFraction}\n            width={this.props.width}\n            height={this.props.height}\n            name={this.props.newName}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StateMachine from \"../logic/StateMachine\";\nimport SnippetTransition from \"./SnippetTransition\";\n\nconst DIRECTION_RADIUS_BUFFER = 0.75;\n\n// TODO\n// * Handle external events (e.g. click on photo)\n// * Support for delayed state change. Short term memory.\n// * Add click handler (maybe navigate to public site)\n// * Integrate on frontpage of personal website\nexport default class ReactivePortrait extends React.Component {\n  static defaultSnippet = \"idle\";\n\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    onSnippetChanged: PropTypes.func,\n    snippetsMediaPath: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    this.stateMachine = new StateMachine(ReactivePortrait.defaultSnippet);\n    this.rootRef = React.createRef();\n\n    this.state = {\n      stateMachine: this.stateMachine,\n      snippetName: this.stateMachine.getState(),\n      newSnippetName: this.stateMachine.getState(),\n    };\n  }\n\n  componentDidMount() {\n    this._timer = window.setInterval(this.tick50Ms, 100);\n    window.addEventListener(\"mousemove\", this.onMouseMove);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this._timer);\n  }\n\n  tick50Ms = () => {\n    this.invokeEvent(\"tick50Ms\");\n  };\n\n  onMouseMove = (event) => {\n    if (!this.rootRef.current) {\n      return;\n    }\n\n    const rect = this.rootRef.current.getBoundingClientRect();\n    const centerX = rect.x + Math.round(rect.width / 2);\n    const centerY = rect.y + Math.round(rect.height / 2);\n\n    const offsetX = event.clientX - centerX;\n    const offsetY = event.clientY - centerY;\n\n    const distance = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2));\n\n    // ignore directional mouse movements that are too close\n    if (distance < rect.width * DIRECTION_RADIUS_BUFFER) {\n      return;\n    }\n\n    var angle, side;\n    if (offsetX > 0) {\n      angle = Math.atan((-1 * offsetY) / offsetX) * (180 / Math.PI);\n      side = \"Right\";\n    } else {\n      angle = Math.atan(offsetY / offsetX) * (180 / Math.PI);\n      side = \"Left\";\n    }\n\n    var direction;\n    if (angle > 67.5) {\n      direction = \"Up\";\n    } else if (angle > 22.5) {\n      direction = \"Up\" + side;\n    } else if (angle > -22.5) {\n      direction = side;\n    } else if (angle > -67.5) {\n      direction = \"Down\" + side;\n    } else {\n      direction = \"Down\";\n    }\n    this.invokeEvent(\"mouse\" + direction);\n  };\n\n  onAttention = () => {\n    this.invokeEvent(\"attention\");\n  };\n\n  invokeEvent(transition) {\n    var newName = this.stateMachine.getNewState(transition);\n    if (newName === this.state.newSnippetName) {\n      return;\n    }\n\n    if (this.props.onSnippetChanged) {\n      this.props.onSnippetChanged(newName);\n    }\n\n    this.setState({\n      snippetName: this.state.newSnippetName,\n      newSnippetName: newName,\n    });\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.rootRef}\n        onMouseEnter={this.onAttention}\n        onClick={this.onAttention}\n        style={{\n          position: \"relative\",\n          width: this.props.width,\n          height: this.props.height,\n        }}\n      >\n        <SnippetTransition\n          mediaPath={this.props.snippetsMediaPath}\n          width={this.props.width}\n          height={this.props.height}\n          name={this.state.snippetName}\n          newName={this.state.newSnippetName}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactivePortrait from \"./components/ReactivePortrait\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      snippetName: ReactivePortrait.defaultSnippet,\n    };\n  }\n\n  onPortraitChanged = (snippetName) => {\n    this.setState({ snippetName: snippetName });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ReactivePortrait\n            snippetsMediaPath=\"media\"\n            onSnippetChanged={this.onPortraitChanged}\n            width={400}\n            height={400}\n          />\n          <div style={{ paddingTop: \"20px\" }}>{this.state.snippetName}</div>\n        </header>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}